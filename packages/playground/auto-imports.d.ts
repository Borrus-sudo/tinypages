// Generated by 'unplugin-auto-import'
export {};
declare global {
  const IconMdiGithub: typeof import("~icons/mdi/github")["default"];
  const useCallback: typeof import("preact/hooks")["useCallback"];
  const useContext: typeof import("preact/hooks")["useContext"];
  const useEffect: typeof import("preact/hooks")["useEffect"];
  const useMemo: typeof import("preact/hooks")["useMemo"];
  const useReducer: typeof import("preact/hooks")["useReducer"];
  const useRef: typeof import("preact/hooks")["useRef"];
  const useState: typeof import("preact/hooks")["useState"];
}

declare module "virtual:pwa-register/preact" {
  import type { StateUpdater } from "preact/hooks";
  export interface RegisterSWOptions {
    immediate?: boolean;
    onNeedRefresh?: () => void;
    onOfflineReady?: () => void;
    onRegistered?: (
      registration: ServiceWorkerRegistration | undefined
    ) => void;
    onRegisterError?: (error: any) => void;
  }

  export function useRegisterSW(options?: RegisterSWOptions): {
    needRefresh: [boolean, StateUpdater<boolean>];
    offlineReady: [boolean, StateUpdater<boolean>];
    updateServiceWorker: (reloadPage?: boolean) => Promise<void>;
  };
}
